name: Update and Deploy Dashboard
on:
  schedule:
    # Run every hour
    - cron: '0 * * * *'
  # Allow manual triggering
  workflow_dispatch:
  # Run on pushes to main branch
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask Frozen-Flask pandas plotly nltk matplotlib markupsafe
        # Download NLTK stopwords
        python -c "import nltk; nltk.download('stopwords')"
    - name: Ensure data directory exists
      run: |
        mkdir -p data
        
    - name: Check for existing data file
      id: check_data
      run: |
        if [ -f "data/survey_data.csv" ]; then
          echo "data_exists=true" >> $GITHUB_OUTPUT
        else
          echo "data_exists=false" >> $GITHUB_OUTPUT
        fi
    - name: Debug repository contents
      run: |
        echo "Repository structure:"
        find . -type f -name "*.csv" | sort
        
        echo "\nData directory contents:"
        ls -la data/ || echo "Data directory doesn't exist"
        
        if [ -f "data/survey_data.csv" ]; then
          echo "\nFirst 10 lines of data/survey_data.csv:"
          head -n 10 data/survey_data.csv
          echo "\nFile size:"
          wc -l data/survey_data.csv
        else
          echo "\nWARNING: data/survey_data.csv does not exist!"
        fi

    - name: Fetch latest data (optional)
      if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
      run: |
        # If you have an API endpoint, uncomment and modify:
        # curl -o data/survey_data.csv ${{ secrets.API_URL }}
        # For now, we'll just use the existing data file
        mkdir -p data
        
    - name: Generate static dashboard
      run: |
        # First, let's print out some debug info
        echo "Current directory structure:"
        find . -type d -not -path "*/\.*" | sort
        
        # Make sure the data directory exists and has the correct CSV
        echo "Data directory contents:"
        ls -la data/
        
        # Generate the static site
        python simple_static_generator.py
        
        # Verify what was generated
        echo "Generated files in docs directory:"
        find docs -type f | sort
        
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: docs
        branch: gh-pages